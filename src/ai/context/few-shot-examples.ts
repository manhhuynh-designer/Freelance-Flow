/**
 * @fileoverview Provides few-shot learning examples to the AI model.
 * These examples guide the model to produce the correct JSON output format,
 * especially for complex entity extraction tasks like distinguishing between
 * a task name and a client name within the same user prompt.
 */

export const fewShotExamples = {
  en: `
Here are EXACT examples of the correct JSON response format you MUST follow:

<example>
  <user_prompt>Create a new task named "Develop backend API for e-commerce" for client "Wayne Enterprises", deadline 2025-08-15. #Task</user_prompt>
  <assistant_response>
{
  "text": "‚úÖ **Task Created Successfully!** \\n\\nI've created the task '**Develop backend API for e-commerce**' for client **Wayne Enterprises** with a deadline of **August 15, 2025**. The task has been set to start today and will be categorized appropriately.",
  "action": {
    "type": "createTask",
    "payload": {
      "name": "Develop backend API for e-commerce",
      "clientName": "Wayne Enterprises",
      "deadline": "2025-08-15",
      "startDate": "2025-08-06",
      "description": "Backend API development for e-commerce platform",
      "status": "todo"
    }
  }
}
  </assistant_response>
</example>

<example>
  <user_prompt>can you make a new 3d task for stark industries called 'render iron man suit'. deadline is next friday</user_prompt>
  <assistant_response>
{
  "text": "üöÄ **3D Task Scheduled!** \\n\\nDone! I've scheduled the '**render iron man suit**' task for **Stark Industries**, due next Friday (August 9, 2025). This task is ready to go!",
  "action": {
    "type": "createTask",
    "payload": {
      "name": "render iron man suit",
      "clientName": "Stark Industries",
      "deadline": "2025-08-09",
      "startDate": "2025-08-06",
      "description": "3D rendering of Iron Man suit",
      "status": "todo"
    }
  }
}
  </assistant_response>
</example>

REMEMBER: The "payload" field must ALWAYS be a JSON object with curly braces {}, never an array with square brackets [].
`,
  vi: `
ƒê√¢y l√† c√°c v√≠ d·ª• CH√çNH X√ÅC v·ªÅ ƒë·ªãnh d·∫°ng JSON response ƒë√∫ng m√† b·∫°n PH·∫¢I tu√¢n theo:

<example>
  <user_prompt>T·∫°o c√¥ng vi·ªác m·ªõi t√™n l√† "Ph√°t tri·ªÉn API backend cho e-commerce" cho kh√°ch h√†ng "Wayne Enterprises", h·∫°n ch√≥t 15-08-2025. #Task</user_prompt>
  <assistant_response>
{
  "text": "‚úÖ **T·∫°o c√¥ng vi·ªác th√†nh c√¥ng!** \\n\\nT√¥i ƒë√£ t·∫°o c√¥ng vi·ªác '**Ph√°t tri·ªÉn API backend cho e-commerce**' cho kh√°ch h√†ng **Wayne Enterprises** v·ªõi h·∫°n ch√≥t **15 th√°ng 8, 2025**. C√¥ng vi·ªác ƒë∆∞·ª£c ƒë·∫∑t b·∫Øt ƒë·∫ßu t·ª´ h√¥m nay.",
  "action": {
    "type": "createTask",
    "payload": {
      "name": "Ph√°t tri·ªÉn API backend cho e-commerce",
      "clientName": "Wayne Enterprises",
      "deadline": "2025-08-15",
      "startDate": "2025-08-06",
      "description": "Ph√°t tri·ªÉn API backend cho n·ªÅn t·∫£ng th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠",
      "status": "todo"
    }
  }
}
  </assistant_response>
</example>

<example>
  <user_prompt>b·∫°n c√≥ th·ªÉ t·∫°o m·ªôt c√¥ng vi·ªác 3d m·ªõi cho stark industries t√™n l√† 'render b·ªô gi√°p iron man'. h·∫°n ch√≥t l√† th·ª© s√°u t·ªõi</user_prompt>
  <assistant_response>
{
  "text": "üöÄ **ƒê√£ l√™n l·ªãch c√¥ng vi·ªác 3D!** \\n\\nXong! T√¥i ƒë√£ l√™n l·ªãch c√¥ng vi·ªác '**render b·ªô gi√°p iron man**' cho **Stark Industries**, h·∫°n v√†o th·ª© S√°u t·ªõi (9 th√°ng 8, 2025). C√¥ng vi·ªác ƒë√£ s·∫µn s√†ng!",
  "action": {
    "type": "createTask",
    "payload": {
      "name": "render b·ªô gi√°p iron man",
      "clientName": "Stark Industries",
      "deadline": "2025-08-09",
      "startDate": "2025-08-06",
      "description": "Render 3D b·ªô gi√°p Iron Man",
      "status": "todo"
    }
  }
}
  </assistant_response>
</example>

NH·ªö: Tr∆∞·ªùng "payload" ph·∫£i LU√îN l√† m·ªôt ƒë·ªëi t∆∞·ª£ng JSON v·ªõi d·∫•u ngo·∫∑c nh·ªçn {}, kh√¥ng bao gi·ªù l√† m·∫£ng v·ªõi d·∫•u ngo·∫∑c vu√¥ng [].
`,
};